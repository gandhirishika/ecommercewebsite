{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\n\nconst CartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let pro;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr.id === product.id);\n\n      if (check) {\n        return state;\n      } else {\n        const Tprice = state.totalPrice + product.discount * quantity;\n        const Tquantities = state.totalQuantities + quantity;\n        product.quantity = quantity;\n        return { ...state,\n          products: [...state.products, product],\n          totalPrice: Tprice,\n          totalQuantities: Tquantities\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/project/ECOMMERCE WEBSITE/ecommerce/src/store/reducers/CartReducer.js"],"names":["initState","products","totalPrice","totalQuantities","CartReducer","state","action","pro","type","product","quantity","payload","check","find","pr","id","Tprice","discount","Tquantities"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,UAAU,EAAC,CAFG;AAGdC,EAAAA,eAAe,EAAC;AAHF,CAAlB;;AAKA,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAVM,MAAU;AACnD,MAAIC,GAAJ;;AACI,UAAOD,MAAM,CAACE,IAAd;AACA,SAAK,aAAL;AACI,YAAM;AAACC,QAAAA,OAAD;AAAWC,QAAAA;AAAX,UAAuBJ,MAAM,CAACK,OAApC;AACA,YAAMC,KAAK,GAAGP,KAAK,CAACJ,QAAN,CAAeY,IAAf,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUN,OAAO,CAACM,EAA5C,CAAd;;AACA,UAAGH,KAAH,EAAS;AACL,eAAOP,KAAP;AACH,OAFD,MAGI;AACA,cAAMW,MAAM,GAAGX,KAAK,CAACH,UAAN,GAAmBO,OAAO,CAACQ,QAAR,GAAiBP,QAAnD;AACA,cAAMQ,WAAW,GAAGb,KAAK,CAACF,eAAN,GAAyBO,QAA7C;AACAD,QAAAA,OAAO,CAACC,QAAR,GAAmBA,QAAnB;AACA,eAAM,EACF,GAAGL,KADD;AACSJ,UAAAA,QAAQ,EAAC,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAqBQ,OAArB,CADlB;AACkDP,UAAAA,UAAU,EAACc,MAD7D;AAEFb,UAAAA,eAAe,EAACe;AAFd,SAAN;AAKH;;AAEL;AACI,aAAOb,KAAP;AAnBJ;AAqBH,CAvBD;;KAAMD,W;AAwBN,eAAeA,WAAf","sourcesContent":["const initState = {\r\n    products: [],\r\n    totalPrice:0,\r\n    totalQuantities:0\r\n}\r\nconst CartReducer = (state = initState , action) =>{\r\nlet pro\r\n    switch(action.type){\r\n    case 'ADD_TO_CART':\r\n        const {product , quantity} = action.payload;\r\n        const check = state.products.find(pr => pr.id === product.id);\r\n        if(check){\r\n            return state;\r\n        }\r\n        else{\r\n            const Tprice = state.totalPrice + product.discount*quantity;\r\n            const Tquantities = state.totalQuantities  + quantity;\r\n            product.quantity = quantity;\r\n            return{\r\n                ...state , products:[...state.products , product] , totalPrice:Tprice , \r\n                totalQuantities:Tquantities\r\n            }\r\n\r\n        }\r\n\r\n    default:\r\n        return state;\r\n}\r\n}\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}