{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\n\nconst CartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let product;\n  let index;\n  let findPro;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr.id === product.id);\n\n      if (check) {\n        return state;\n      } else {\n        const Tprice = state.totalPrice + product.discount * quantity;\n        const Tquantities = state.totalQuantities + quantity;\n        product.quantity = quantity;\n        return { ...state,\n          products: [...state.products, product],\n          totalPrice: Tprice,\n          totalQuantities: Tquantities\n        };\n      }\n\n    case 'INC':\n      findPro = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n      findPro.quantity += 1;\n      state.products[index] = findPro;\n      return { ...state,\n        totalPrice: state.totalPrice + findPro.discount,\n        totalQuantities: state.totalQuantities + 1\n      };\n\n    case 'DEC':\n      findPro = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n\n      if (findPro.quantity > 1) {\n        findPro.quantity -= 1;\n        state.products[index] = findPro;\n        return { ...state,\n          totalPrice: state.totalPrice + findPro.discount,\n          totalQuantities: state.totalQuantities - 1\n        };\n      } else {\n        return state;\n      }\n\n    case 'REMOVE':\n      {\n        findPro = state.products.find(product => product.id === action.payload);\n        const filtered = state.productx.filter(product => product.id != action.payload);\n        return { ...state,\n          products: filtered,\n          totalPrice: state.totalPrice - findPro.discount * findPro.quantity,\n          totalQuantities: state.totalQuantities - findPro.quantity\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/project/ECOMMERCE WEBSITE/ecommerce/src/store/reducers/CartReducer.js"],"names":["initState","products","totalPrice","totalQuantities","CartReducer","state","action","product","index","findPro","type","quantity","payload","check","find","pr","id","Tprice","discount","Tquantities","findIndex","filtered","productx","filter"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,UAAU,EAAE,CAFE;AAGdC,EAAAA,eAAe,EAAE;AAHH,CAAlB;;AAKA,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAXM,MAAW;AAC/C,MAAIC,OAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,OAAJ;;AACA,UAAQH,MAAM,CAACI,IAAf;AACI,SAAK,aAAL;AACI,YAAM;AAAEH,QAAAA,OAAF;AAAWI,QAAAA;AAAX,UAAwBL,MAAM,CAACM,OAArC;AACA,YAAMC,KAAK,GAAGR,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUT,OAAO,CAACS,EAA5C,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACP,eAAOR,KAAP;AACH,OAFD,MAGK;AACD,cAAMY,MAAM,GAAGZ,KAAK,CAACH,UAAN,GAAmBK,OAAO,CAACW,QAAR,GAAmBP,QAArD;AACA,cAAMQ,WAAW,GAAGd,KAAK,CAACF,eAAN,GAAwBQ,QAA5C;AACAJ,QAAAA,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACA,eAAO,EACH,GAAGN,KADA;AACOJ,UAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBM,OAApB,CADjB;AAC+CL,UAAAA,UAAU,EAAEe,MAD3D;AAEHd,UAAAA,eAAe,EAAEgB;AAFd,SAAP;AAKH;;AACL,SAAK,KAAL;AACIV,MAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAemB,SAAf,CAAyBb,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;AACAH,MAAAA,OAAO,CAACE,QAAR,IAAoB,CAApB;AACAN,MAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBC,OAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AACOH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBO,OAAO,CAACS,QAD9C;AACwDf,QAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAwB;AADjG,OAAP;;AAGJ,SAAK,KAAL;AACIM,MAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAemB,SAAf,CAAyBb,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;;AACA,UAAIH,OAAO,CAACE,QAAR,GAAmB,CAAvB,EAA0B;AACtBF,QAAAA,OAAO,CAACE,QAAR,IAAoB,CAApB;AACAN,QAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBC,OAAxB;AACA,eAAO,EACH,GAAGJ,KADA;AACOH,UAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBO,OAAO,CAACS,QAD9C;AACwDf,UAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAwB;AADjG,SAAP;AAIH,OAPD,MAQK;AACD,eAAOE,KAAP;AACH;;AACL,SAAK,QAAL;AAAe;AACXI,QAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACA,cAAMS,QAAQ,GAAGhB,KAAK,CAACiB,QAAN,CAAeC,MAAf,CAAsBhB,OAAO,IAAIA,OAAO,CAACS,EAAR,IAAcV,MAAM,CAACM,OAAtD,CAAjB;AACA,eAAO,EACH,GAAGP,KADA;AAEHJ,UAAAA,QAAQ,EAAEoB,QAFP;AAGHnB,UAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,GAAmBO,OAAO,CAACS,QAAR,GAAmBT,OAAO,CAACE,QAHvD;AAGiER,UAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAwBM,OAAO,CAACE;AAHlH,SAAP;AAMH;;AACD;AACI,aAAON,KAAP;AAlDR;AAoDH,CAxDD;;KAAMD,W;AAyDN,eAAeA,WAAf","sourcesContent":["const initState = {\r\n    products: [],\r\n    totalPrice: 0,\r\n    totalQuantities: 0\r\n}\r\nconst CartReducer = (state = initState, action) => {\r\n    let product;\r\n    let index;\r\n    let findPro;\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART':\r\n            const { product, quantity } = action.payload;\r\n            const check = state.products.find(pr => pr.id === product.id);\r\n            if (check) {\r\n                return state;\r\n            }\r\n            else {\r\n                const Tprice = state.totalPrice + product.discount * quantity;\r\n                const Tquantities = state.totalQuantities + quantity;\r\n                product.quantity = quantity;\r\n                return {\r\n                    ...state, products: [...state.products, product], totalPrice: Tprice,\r\n                    totalQuantities: Tquantities\r\n                }\r\n\r\n            }\r\n        case 'INC':\r\n            findPro = state.products.find(product => product.id === action.payload);\r\n            index = state.products.findIndex(product => product.id === action.payload);\r\n            findPro.quantity += 1;\r\n            state.products[index] = findPro;\r\n            return {\r\n                ...state, totalPrice: state.totalPrice + findPro.discount, totalQuantities: state.totalQuantities + 1\r\n            }\r\n        case 'DEC':\r\n            findPro = state.products.find(product => product.id === action.payload);\r\n            index = state.products.findIndex(product => product.id === action.payload);\r\n            if (findPro.quantity > 1) {\r\n                findPro.quantity -= 1;\r\n                state.products[index] = findPro;\r\n                return {\r\n                    ...state, totalPrice: state.totalPrice + findPro.discount, totalQuantities: state.totalQuantities - 1\r\n                }\r\n\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        case 'REMOVE': {\r\n            findPro = state.products.find(product => product.id === action.payload);\r\n            const filtered = state.productx.filter(product => product.id != action.payload);\r\n            return {\r\n                ...state,\r\n                products: filtered,\r\n                totalPrice: state.totalPrice - findPro.discount * findPro.quantity, totalQuantities: state.totalQuantities - findPro.quantity\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}