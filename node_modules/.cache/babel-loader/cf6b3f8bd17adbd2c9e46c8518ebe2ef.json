{"ast":null,"code":"const initState = {\n  products: [],\n  totalPrice: 0,\n  totalQuantities: 0\n};\n\nconst CartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let product;\n  let index;\n  let findPro;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const {\n        product,\n        quantity\n      } = action.payload;\n      const check = state.products.find(pr => pr.id === product.id);\n\n      if (check) {\n        return state;\n      } else {\n        const Tprice = state.totalPrice + product.discount * quantity;\n        const Tquantities = state.totalQuantities + quantity;\n        product.quantity = quantity;\n        return { ...state,\n          products: [...state.products, product],\n          totalPrice: Tprice,\n          totalQuantities: Tquantities\n        };\n      }\n\n    case 'INC':\n      findPro = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n      findPro.quantity += 1;\n      state.products[index] = findPro;\n      return { ...state,\n        totalPrice: state.totalPrice + findPro.discount,\n        totalQuantities: state.totalQuantities + 1\n      };\n\n    case 'DEC':\n      findPro = state.products.find(product => product.id === action.payload);\n      index = state.products.findIndex(product => product.id === action.payload);\n\n      if (findPro > 1) {\n        findPro.quantity -= 1;\n        state.products[index] = findPro;\n        return { ...state,\n          totalPrice: state.totalPrice + findPro.discount,\n          totalQuantities: state.totalQuantities - 1\n        };\n      } else {\n        return state;\n      }\n\n    case 'REMOVE':\n      {\n        findPro = state.products.find(product => product.id === action.payload);\n        const filtered = state.product.filter(product => product.id != action.payload);\n        return { ...state,\n          products: filtered,\n          totalPrice: state.totalPrice - findPro.discount * findPro.quantity,\n          totalQuantities: state.totalQuantities - findPro\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/project/ECOMMERCE WEBSITE/ecommerce/src/store/reducers/CartReducer.js"],"names":["initState","products","totalPrice","totalQuantities","CartReducer","state","action","product","index","findPro","type","quantity","payload","check","find","pr","id","Tprice","discount","Tquantities","findIndex","filtered","filter"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,UAAU,EAAC,CAFG;AAGdC,EAAAA,eAAe,EAAC;AAHF,CAAlB;;AAKA,MAAMC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBL,SAAsB;AAAA,MAAVM,MAAU;AACnD,MAAIC,OAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,OAAJ;;AACI,UAAOH,MAAM,CAACI,IAAd;AACA,SAAK,aAAL;AACI,YAAM;AAACH,QAAAA,OAAD;AAAWI,QAAAA;AAAX,UAAuBL,MAAM,CAACM,OAApC;AACA,YAAMC,KAAK,GAAGR,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUT,OAAO,CAACS,EAA5C,CAAd;;AACA,UAAGH,KAAH,EAAS;AACL,eAAOR,KAAP;AACH,OAFD,MAGI;AACA,cAAMY,MAAM,GAAGZ,KAAK,CAACH,UAAN,GAAmBK,OAAO,CAACW,QAAR,GAAiBP,QAAnD;AACA,cAAMQ,WAAW,GAAGd,KAAK,CAACF,eAAN,GAAyBQ,QAA7C;AACAJ,QAAAA,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACA,eAAM,EACF,GAAGN,KADD;AACSJ,UAAAA,QAAQ,EAAC,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAqBM,OAArB,CADlB;AACkDL,UAAAA,UAAU,EAACe,MAD7D;AAEFd,UAAAA,eAAe,EAACgB;AAFd,SAAN;AAKH;;AACL,SAAI,KAAJ;AACIV,MAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAemB,SAAf,CAAyBb,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;AACRH,MAAAA,OAAO,CAACE,QAAR,IAAkB,CAAlB;AACAN,MAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBC,OAAxB;AACA,aAAM,EACF,GAAGJ,KADD;AACSH,QAAAA,UAAU,EAACG,KAAK,CAACH,UAAN,GAAiBO,OAAO,CAACS,QAD7C;AACwDf,QAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAsB;AAD/F,OAAN;;AAGI,SAAI,KAAJ;AACIM,MAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACAJ,MAAAA,KAAK,GAAGH,KAAK,CAACJ,QAAN,CAAemB,SAAf,CAAyBb,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAA1D,CAAR;;AACA,UAAGH,OAAO,GAAC,CAAX,EACR;AAACA,QAAAA,OAAO,CAACE,QAAR,IAAkB,CAAlB;AACDN,QAAAA,KAAK,CAACJ,QAAN,CAAeO,KAAf,IAAwBC,OAAxB;AACA,eAAM,EACF,GAAGJ,KADD;AACSH,UAAAA,UAAU,EAACG,KAAK,CAACH,UAAN,GAAiBO,OAAO,CAACS,QAD7C;AACwDf,UAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAsB;AAD/F,SAAN;AAIG,OAPK,MAQF;AACA,eAAOE,KAAP;AACH;;AACD,SAAK,QAAL;AAAc;AACZI,QAAAA,OAAO,GAAGJ,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBP,OAAO,IAAIA,OAAO,CAACS,EAAR,KAAeV,MAAM,CAACM,OAArD,CAAV;AACA,cAAMS,QAAQ,GAAGhB,KAAK,CAACE,OAAN,CAAce,MAAd,CAAqBf,OAAO,IAAIA,OAAO,CAACS,EAAR,IAAYV,MAAM,CAACM,OAAnD,CAAjB;AACJ,eAAM,EACN,GAAGP,KADG;AAENJ,UAAAA,QAAQ,EAACoB,QAFH;AAGNnB,UAAAA,UAAU,EAACG,KAAK,CAACH,UAAN,GAAkBO,OAAO,CAACS,QAAR,GAAiBT,OAAO,CAACE,QAHhD;AAG0DR,UAAAA,eAAe,EAAEE,KAAK,CAACF,eAAN,GAAsBM;AAHjG,SAAN;AAKI;;AACF;AACM,aAAOJ,KAAP;AAjDJ;AAmDH,CAvDD;;KAAMD,W;AAwDN,eAAeA,WAAf","sourcesContent":["const initState = {\r\n    products: [],\r\n    totalPrice:0,\r\n    totalQuantities:0\r\n}\r\nconst CartReducer = (state = initState , action) =>{\r\nlet product;\r\nlet index;\r\nlet findPro;\r\n    switch(action.type){\r\n    case 'ADD_TO_CART':\r\n        const {product , quantity} = action.payload;\r\n        const check = state.products.find(pr => pr.id === product.id);\r\n        if(check){\r\n            return state;\r\n        }\r\n        else{\r\n            const Tprice = state.totalPrice + product.discount*quantity;\r\n            const Tquantities = state.totalQuantities  + quantity;\r\n            product.quantity = quantity;\r\n            return{\r\n                ...state , products:[...state.products , product] , totalPrice:Tprice , \r\n                totalQuantities:Tquantities\r\n            }\r\n\r\n        }\r\n    case'INC':\r\n        findPro = state.products.find(product => product.id === action.payload);\r\n        index = state.products.findIndex(product => product.id === action.payload);\r\nfindPro.quantity+=1;\r\nstate.products[index] = findPro;\r\nreturn{\r\n    ...state , totalPrice:state.totalPrice+findPro.discount , totalQuantities: state.totalQuantities+1\r\n}\r\n    case'DEC':\r\n        findPro = state.products.find(product => product.id === action.payload);\r\n        index = state.products.findIndex(product => product.id === action.payload);\r\n        if(findPro>1)\r\n{findPro.quantity-=1;\r\nstate.products[index] = findPro;\r\nreturn{\r\n    ...state , totalPrice:state.totalPrice+findPro.discount , totalQuantities: state.totalQuantities-1\r\n}\r\n\r\n  }\r\n  else{\r\n      return state;\r\n  }  \r\n  case 'REMOVE':{\r\n    findPro = state.products.find(product => product.id === action.payload);\r\n    const filtered = state.product.filter(product => product.id!=action.payload);\r\nreturn{\r\n...state ,\r\nproducts:filtered,\r\ntotalPrice:state.totalPrice -findPro.discount*findPro.quantity, totalQuantities: state.totalQuantities-findPro\r\n\r\n  }}\r\n  default:\r\n        return state;\r\n}\r\n}\r\nexport default CartReducer;"]},"metadata":{},"sourceType":"module"}